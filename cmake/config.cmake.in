@PACKAGE_INIT@

set(COSM_HAL_TARGET @COSM_HAL_TARGET@)
set(COSM_BUILD_FOR @COSM_BUILD_FOR@)
set(COSM_WITH_VIS @COSM_WITH_VIS@)
set(COSM_BUILD_ENV @COSM_BUILD_ENV@)
set(COSM_PAL_TARGET @COSM_PAL_TARGET@)
set(LIBRA_DEPS_PREFIX @LIBRA_DEPS_PREFIX@)

set(COSM_ARGOS_ROBOT_TYPE @COSM_ARGOS_ROBOT_TYPE@)
set(COSM_ARGOS_ROBOT_NAME_PREFIX @COSM_ARGOS_ROBOT_NAME_PREFIX@)
set(COSM_ARGOS_CONTROLLER_XML_ID @COSM_ARGOS_CONTROLLER_XML_ID@)
set(COSM_ROS_ROOT @COSM_ROS_ROOT@)
set(COSM_ROS_ROBOT_TYPE @COSM_ROS_ROBOT_TYPE@)
set(COSM_ROS_ROBOT_NAME_PREFIX @COSM_ROS_ROBOT_NAME_PREFIX@)
set(COSM_ROS_CONTROLLER_XML_ID @COSM_ROS_CONTROLLER_XML_ID@)
set(COSM_ROS_MD5 @COSM_ROS_MD5@)

if(COSM_WITH_VIS)
  find_package(Qt5 REQUIRED COMPONENTS
    Core
    Widgets
    Gui
    )
endif()

set(cosm_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX})

if(NOT TARGET rcppsw::rcppsw)
  find_package(rcppsw
    HINTS ${cosm_INSTALL_PREFIX})
endif()

if("${COSM_BUILD_FOR}" MATCHES "ROS")
  # ROS
  find_package(catkin REQUIRED COMPONENTS
    roscpp
    rosconsole
    std_msgs
    HINTS /opt/ros/noetic
    )
endif()


include("${CMAKE_CURRENT_LIST_DIR}/cosm-@COSM_HAL_TARGET@-exports.cmake")
set(cosm_INCLUDE_DIRS ${cosm_INSTALL_PREFIX}/include)


check_required_components("COSM")
